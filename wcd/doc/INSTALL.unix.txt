PREREQUISITES

	* gcc       : GNU C compiler
	* make      : GNU make
	* sh        : Bourne type shell
	* coreutils : GNU core utilities package (chmod, install, mkdir, mv, rm, uname)
	* gettext   : Framework to help GNU packages produce multi-lingual messages. (optional)
	* ncurses   : CRT screen handling and optimization package. (optional)

	Only needed if you change the manual page:

	* man         : Man, apropos en whatis
	* groff       : GNU troff text formatting system.
	* ghostscript : An interpreter for the PostScript language and for PDF

	Check if you have GNU make(1) and GNU gcc(1) installed on your
	system. On some systems GNU make may be installed as 'gmake' command.

	    make --version
	    gcc --version

	If you can't meet the prerequisites, see section USING NATIVE OS TOOLS below.


BASIC INSTALLATION

	Change to directory src/

	To compile using GNU make:

	    make all

	Options that can be enabled during compiling

	    UCS=1	Enable unicode (UTF8) support
			The default value is empty.

	    ENABLE_NLS=1
			Enable native language support.
			That is, use locale files.
			The default value is 1.

	    STATIC=1	Enable static linking. Make a
			standalone wcd binary.
			The default value is empty.

	    CURSES=<curses|ncurses|ncursesw|pdcurses>

			Select curses library.
			The default value is 'ncurses'.
			Only an expert should change this.

	    EXT=.exe	Set executable extension
			The default value is '.exe' for
			historical reasons (DOS) and to
			make a distinction between the binary
			and the function/alias.

	An example to enable unicode support, provided that the library
	libncursesw is also available:

	    make UCS=1 clean all

	To disable curses and compile with plain stdin/stdout
	interface type, reset the CURSES variable:

	    make CURSES=

	To install:

	    make all strip install

	Now go to section SHELL INTEGRATION below.

INSTALLATION NAMES

	By default the 'install' target will install the program in
	/usr/local/bin, the language files in /usr/local/share/locale
	and the man page in /usr/local/share/man. You can specify an
	installation prefix other than /usr/local by modifying the
	'prefix' variable. An Example:

	    make prefix=$HOME clean all
	    make prefix=$HOME strip install

DISTRIBUTION PACKAGE CREATION

	After installation a package can be created that contains
	a ready-to-run wcd binary.

	  Type `make dist' to create a .tar.gz file.

	  Type `make dist-zip' to create a .zip file.


USING SIMPLE GNU MAKEFILES

	If the above command failed to recognize your system, the
	options are after below.

	With gcc compiler and ncurses:
	  make -f old/Makefile.gnu.ncurses

	With gcc compiler and stdin/stdout interface:
	  make -f old/Makefile.gnu.std

	With gcc compiler and PDcurses:
	  make -f old/Makefile.gnu.pdcurses

	Note: using PDcurses on Unix makes not much sense for wcd,
	because it runs in its own separate window, not in the
	current terminal.

	Now go to section SHELL INTEGRATION below.

USING NATIVE OS TOOLS

	If you don't have GNU tools, see these files for native OS
	compilation.

	With HP-UX cc and ncurses:
	  make -f Makefile.HP-UX.ncurses

	With HP-UX cc and curses:
	  make -f Makefile.HP-UX.curses

	With SunOS cc and curses:
	  make -f Makefile.SunOS.curses

	With SunOS gcc and curses:
	  make -f Makefile.SunOS.curses CC=gcc CFLAGS=-Ic3po LFLAGS=-lcurses

	QNX 4.25
	  make4qnx

	Now go to section SHELL INTEGRATION below.

USING IMAKE

	Wcd can also be compiled with Imake:

	    xmkmf
	    make depend
	    make
	    make install

	The last command copies wcd.exe to your $HOME/bin directory.
	Note: Imake will overwrite the makefile "Makefile".

	Now go to section SHELL INTEGRATION below.

PORTABILITY

	See section "Source code" in file README.txt.

	--

	A compile error occurs when you use gcc < 3.0 and
	<stdbool.h> is included somewhere (e.g. in curses.h).

	Thanks to Kevin M. Rosenberg, apply the following patch:

	    patch -p1 < patch/wcd_bool.diff

	--

	Conflicting curses.h ncurses.h

	On some systems curses.h is conflicting with ncurses.h. To
	compile wcd you can solve this by creating a symbolic link
	curses.h in the wcd source directory pointing to the ncurses.h
	file and adding -I. to CFLAGS in old/Makefile.ncurses.gcc.

	This problem was seen on a BSDI BSD/OS 4.0 system.
	/usr/local/include/ncurses.h

	......................................................................


	Make sure that you have a copy of wcd.exe in a directory
	listed in your PATH environment. If you install a local copy,
	for example in your $HOME/bin directory, this directory must
	be added to the PATH environment.

	Copy file wcd.1 somewhere in $MANPATH .

SHELL INTEGRATION

    Installation of wcd function or alias

	Note that the current working directory of a Bourne-like or C
	shell can only be changed by the builtin cd command. Therefore
	the binary is always called by a function or alias. The
	function or alias sources a shell script (go-script) which is
	generated by the binary wcd.exe. Wcd can only work after the
	function or alias is defined.

    Bourne-like shells

	Korn Shell (ksh, pdksh), Bourne Again Shell (bash), Z shell (zsh), ash, ...

	1) Copy wcd along your PATH, we assume your path
	contains $HOME/bin:

	    cp wcd.exe $HOME/bin

	2) Add the following function the Shell's startup file of your
	shell. For instance in: $HOME/.kshrc (ksh), $HOME/.bashrc
	(bash) or $HOME/.zshenv (zsh)

	    function wcd
	    {
	       $HOME/bin/wcd.exe "$@" &&
	       . $HOME/bin/wcd.go
	    }

	Reload modifications to see new function wcd(). E.g. in Bash:

	    . ~/.bashrc

    C Shell (csh/tcsh)

	1) Copy wcd along your PATH, we assume your path
	contains $HOME/bin:

	    cp wcd.exe $HOME/bin

	2) Add the following alias to the Shell's startup file
	$HOME/.cshrc or $HOME/.tcshrc respectively:

	    alias wcd "$HOME/bin/wcd.exe \!* ; source $HOME/bin/wcd.go"

	Log out and log in to make settings active.

End of file
