
To compile wcd with internationalization support see INSTALL.unix.intl.txt


Change to directory `src'.


If you have GNU make installed on your system first try:

  make -f Makefile.gnu

This will try to build wcd with (n)curses interface,
using gcc or cc and ncurses or curses.
Makefile.gnu is a GNU Makefile and requires GNU make.
On some (non-Linux) systems GNU make is installed as `gmake' command:

  gmake -f Makefile.gnu

Installation:

  make -f Makefile.gnu install

By default `make install' will install the program in /usr/local/bin and the
man file in /usr/local/share/man. You can specify an installation prefix other
than `/usr/local' by giving `make' the option `prefix=PATH'.

Example:

  make clean
  make
  make install prefix=$HOME



If building with Makefile.gnu fails other options are:

With gcc compiler and ncurses:
  make -f Makefile.gnu.ncurses

With HP-UX cc and ncurses:
  make -f Makefile.HP-UX.ncurses

With HP-UX cc and curses:
  make -f Makefile.HP-UX.curses

With SunOS cc and curses:
  make -f Makefile.SunOS.curses

With SunOS gcc and curses:
  make -f Makefile.SunOS.curses CC=gcc CFLAGS=-Ic3po LFLAGS=-lcurses

With gcc compiler and PDcurses:
  make -f Makefile.gnu.pdcurses

You may need to edit the makefile first.

QNX 4.25
  make4qnx

   ----------------------------------------------

To compile wcd with plain stdin/stdout interface type:

  make -f Makefile.gnu.std

You may need to edit file 'Makefile' first if you don't
have the gcc compiler.

   ----------------------------------------------

Wcd can also be compiled with Imake:

  xmkmf
  make depend
  make
  make install

The last command copies wcd.exe to your ~/bin/ directory.
Note: Imake will overwrite the makefile "Makefile".

   ----------------------------------------------
*** PORTABILITY ***

See also section "Source code" in file README.txt.

--

A compile error occurs when you use gcc < 3.0 and
<stdbool.h> is included somewhere (e.g. in curses.h).

Apply the following patch:

  patch -p1 < patch/wcd_bool.diff

(thanks to Kevin M. Rosenberg)

--

Conflicting curses.h ncurses.h

On some systems curses.h is conflicting with ncurses.h. To compile wcd you can
solve this by creating a symbolic link curses.h in the wcd source directory
pointing to the ncurses.h file and adding -I. to CFLAGS in
Makefile.ncurses.gcc.

This problem was seen on a BSDI BSD/OS 4.0 system. /usr/local/include/ncurses.h
......................................................................

Make sure that you have a copy of wcd.exe in a directory listed in your
PATH environment. If you install a local copy, for example in your
$HOME/bin directory, this directory must be added to the PATH
environment.

Copy file wcd.1 somewhere in $MANPATH .



Installation of wcd function or alias
=====================================

Note that the current working directory of a Bourne-like or C shell can only be
changed by the builtin cd command. Therefore the binary is always called by a
function or alias. The function or alias sources a shell script (go-script)
which is generated by the binary wcd.exe. Wcd can only work after the function
or alias is defined.


 ===== Bourne-like shells: =====

Korn Shell (ksh, pdksh), Bourne Again Shell (bash), Z shell (zsh), ash, ...

1)

 copy wcd.exe to your $HOME/bin directory.

2)

 Add the following function to a startup file of your shell. For instance in:
$HOME/.kshrc (ksh)
$HOME/.bashrc (bash)
$HOME/.zshenv (zsh)

function wcd
{
   $HOME/bin/wcd.exe $*
   . $HOME/bin/wcd.go
}


Start a new shell


 ===== C Shell (csh): =====

1)

 copy wcd.exe to your $HOME/bin directory.

2)

 Add the following alias to your $HOME/.cshrc
 file.

alias wcd "$HOME/bin/wcd.exe \!* ; source $HOME/bin/wcd.go"

Start a new C Shell


